{"version":3,"file":"app.DVP4wEGY.js","sources":["../../../resources/js/college/app.js"],"sourcesContent":["// Theme Management\nconst initTheme = () => {\n    const themeToggleBtn = document.getElementById('theme-toggle');\n    if (themeToggleBtn) {\n        themeToggleBtn.addEventListener('click', () => {\n            document.documentElement.classList.toggle('dark');\n            localStorage.theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';\n        });\n    }\n\n    // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.documentElement.classList.add('dark');\n    } else {\n        document.documentElement.classList.remove('dark');\n    }\n};\n\n// Global AJAX Setup\n$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n});\n\n// Initialize Toastr\ntoastr.options = {\n    \"closeButton\": true,\n    \"progressBar\": true,\n    \"positionClass\": \"toast-top-right\",\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"5000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n};\n\n// Mobile Menu Functionality\nconst initMobileMenu = () => {\n    const mobileMenuBtn = document.getElementById('mobileMenuBtn');\n    const mobileMenu = document.getElementById('mobile-menu');\n    const mobileMenuContent = mobileMenu?.querySelector('div');\n    const closeMobileMenuBtn = document.getElementById('close-mobile-menu');\n\n    if (mobileMenuBtn && mobileMenu && mobileMenuContent) {\n        const openMobileMenu = () => {\n            mobileMenu.classList.remove('hidden');\n            setTimeout(() => {\n                mobileMenuContent.classList.remove('-translate-x-full');\n            }, 10);\n        };\n\n        const closeMobileMenu = () => {\n            mobileMenuContent.classList.add('-translate-x-full');\n            setTimeout(() => {\n                mobileMenu.classList.add('hidden');\n            }, 300);\n        };\n\n        mobileMenuBtn.addEventListener('click', openMobileMenu);\n        closeMobileMenuBtn?.addEventListener('click', closeMobileMenu);\n\n        // Close menu when clicking outside\n        mobileMenu.addEventListener('click', (e) => {\n            if (e.target === mobileMenu) {\n                closeMobileMenu();\n            }\n        });\n    }\n};\n\n// Profile Dropdown Functionality\nconst initProfileDropdown = () => {\n    const profileBtn = document.getElementById('profileMenuBtn');\n    const profileDropdown = document.getElementById('profileDropdown');\n\n    if (profileBtn && profileDropdown) {\n        profileBtn.addEventListener('click', () => {\n            profileDropdown.classList.toggle('hidden');\n        });\n\n        // Close dropdown when clicking outside\n        document.addEventListener('click', (e) => {\n            if (!profileBtn.contains(e.target) && !profileDropdown.contains(e.target)) {\n                profileDropdown.classList.add('hidden');\n            }\n        });\n    }\n};\n\n// Form Handling\nconst initFormHandling = () => {\n    // Handle form submissions with AJAX\n    const forms = document.querySelectorAll('form[data-ajax=\"true\"]');\n    forms.forEach(form => {\n        form.addEventListener('submit', function(e) {\n            if (this.dataset.ajax === 'true') {\n                e.preventDefault();\n                const formData = new FormData(this);\n                const submitBtn = this.querySelector('button[type=\"submit\"]');\n                const originalText = submitBtn.innerHTML;\n\n                // Disable submit button and show loading state\n                submitBtn.disabled = true;\n                submitBtn.innerHTML = '<svg class=\"animate-spin h-5 w-5 mx-auto\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle><path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg>';\n\n                fetch(this.action, {\n                    method: 'POST',\n                    body: formData,\n                    headers: {\n                        'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').content,\n                    }\n                })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        toastr.success(data.message);\n                        if (data.redirect) {\n                            window.location.href = data.redirect;\n                        }\n                    } else {\n                        toastr.error(data.message || 'An error occurred');\n                    }\n                })\n                .catch(error => {\n                    toastr.error('An error occurred while processing your request');\n                    console.error('Error:', error);\n                })\n                .finally(() => {\n                    // Restore submit button\n                    submitBtn.disabled = false;\n                    submitBtn.innerHTML = originalText;\n                });\n            }\n        });\n    });\n\n    // File input preview\n    const fileInputs = document.querySelectorAll('input[type=\"file\"][data-preview]');\n    fileInputs.forEach(input => {\n        input.addEventListener('change', function() {\n            const previewElement = document.getElementById(this.dataset.preview);\n            if (previewElement && this.files && this.files[0]) {\n                const reader = new FileReader();\n                reader.onload = function(e) {\n                    previewElement.src = e.target.result;\n                };\n                reader.readAsDataURL(this.files[0]);\n            }\n        });\n    });\n};\n\n// Initialize all components when DOM is loaded\n// document.addEventListener('DOMContentLoaded', () => {\n//     initTheme();\n//     initMobileMenu();\n//     initProfileDropdown();\n//     initFormHandling();\n\n//     // Show toastr messages\n//     @if (Session::has('success'))\n//         toastr.success(\"{{ Session::get('success') }}\");\n//     @endif\n\n//     @if (Session::has('error'))\n//         toastr.error(\"{{ Session::get('error') }}\");\n//     @endif\n\n//     @if (Session::has('info'))\n//         toastr.info(\"{{ Session::get('info') }}\");\n//     @endif\n\n//     @if (Session::has('warning'))\n//         toastr.warning(\"{{ Session::get('warning') }}\");\n//     @endif\n// }); "],"names":[],"mappings":"AAmBA,EAAE,UAAU,CACR,QAAS,CACL,eAAgB,EAAE,yBAAyB,EAAE,KAAK,SAAS,CACnE,CACA,CAAC,EAGD,OAAO,QAAU,CACb,YAAe,GACf,YAAe,GACf,cAAiB,kBACjB,aAAgB,MAChB,aAAgB,OAChB,QAAW,OACX,gBAAmB,OACnB,WAAc,QACd,WAAc,SACd,WAAc,SACd,WAAc,SAClB"}